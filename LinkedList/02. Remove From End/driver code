#include <bits/stdc++.h>
using namespace std;

struct ListNode {
    int val;
    ListNode* next;
    ListNode(int val) {
        this->val = val;
        next = NULL;
    }
};

struct LinkedList {
    ListNode* head;
    LinkedList() {
        head = NULL;
    }

    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* start = new ListNode(0);
        start->next = head;
        ListNode* fast = start;
        ListNode* slow = start;

        for(int i = 1; i <= n; ++i) {
            fast = fast->next;
        }

        while(fast->next != NULL) {
            fast = fast->next;
            slow = slow->next;
        }

        slow->next = slow->next->next;

        return start->next;
    }

    void print() {
        ListNode* temp = head;
        while (temp != NULL) {
            cout << temp->val << " ";
            temp = temp->next;
        }
    }

    void push(int val) {
        ListNode* temp = new ListNode(val);
        temp->next = head;
        head = temp;
    }
};

int main() {
    LinkedList ll;
    ll.push(20);
    ll.push(4);
    ll.push(15);
    ll.push(85);

    int pos;
    cout << "Enter the position from end to remove: ";
    cin >> pos;

    cout << "Given linked list: ";
    ll.print();

    ll.head = ll.removeNthFromEnd(ll.head, pos);

    cout << "\nLinked list after removing node " << pos << " from end: ";
    ll.print();
    return 0;
}
